# wimax.sql
#
# Sample SQL file to create tables and test rows
# for AuthBy WIMAX.
#
# Tested with MySQL 4
# create like this (as root or some other privileged mysql user:
#  mysql <goodies/wimax.sql
#
# Author: Mike McCauley (mikem@open.com.au)
# Copyright (C) 1997-2007 Open System Consultants
# $Id: wimax.sql,v 1.8 2013/11/07 21:38:11 hvn Exp $

drop database if exists wimax;
create database if not exists wimax;
use wimax;

# You will prob want to change this to be private for your site, 
# but it will work with the sample
# config file in goodies/wimax.cfg
grant all privileges on wimax.* to 'mikem'@'localhost' identified by 'fred';

# subscriber
# This is a subscriber, a single paying entity, who may have
# several subscriptions and operate several devices.
# Only CUI is required by AuthBy WIMAX, but you will almost certainly want 
# to add and use other columns for subscriber name, billing and payment 
# details etc.
create table subscriber
(
 cui	char(50) NOT NULL PRIMARY KEY # Chargeable User Identity

 # You may want to add other columns here for your accounting and billing:
);

# subscription
# One for each username (NAI) owned by a suscriber.
# Used for user authentication
# Can be used for device authenticaiton too, where nai is the 
# MAC address of the device expressed as six pairs of hex digits, 
# e.g. "006021A50A23". Alphas are uppercase
# CUI is the Chargeable User Identity. It would prob be a foreign key to your 
# subscribers table, one row for each paying subscriber
create table subscription
(
 nai		char(100) NOT NULL PRIMARY KEY, # user@realm or MAC address
 cui		char(50) NOT NULL,              # FK to subscriber
 psk		char(50),                       # Password or pre-shared key
 hotlineprofile int,                             # FK to hotlineprofiles
 nasprofile	char(100)			# Extra filter IDs
 # You may want to add other columns here for your accounting and billing:
);

# device_session
# One for each device session which has at least started authentication
# A single device may have multiple simultaneous sessions
# sessionid is used as AAA-Session-ID, the unique key for each session. It
# is generated by AuthBy WIMAX as a random hex string
# outer_nai will probably be a pseudo id, just a random number generated by the 
# client. The real user name will be in the inner EAP identity
# nai is the real inner identity of the user, and corresponds to the nai
# of the authenticated subscription
# Keys are always expressed as uppercase hex
create table device_session
(
 sessionid	char(32) NOT NULL PRIMARY KEY,      # Random hex string
 outer_nai      char(100) NOT NULL, # Pseudo-ID

 # Information from the authentication Access-Request
 nai		char(100),		# True identity, FK to subscription
 cui	        char(50),               # FK to subscriber
 napid          char(5),                # NAP-ID
 bsid           char(5),                # BS-ID
 nspid          char(5),                # NSP-ID
 msid           char(50),		# Calling-Station-ID of the MS
 ipaddress	char(50),		# MS IP Address
 ha_address	char(50),               # HA IP Address
 capabilities   varchar(512),           # WiMAX Capability
 timezoneoffset int,                    # WiMAX-GMT-Timezone-Offset (seconds)

 # Mobility Keys, created during authentication
 mip_rk		char(128),		# 64 octets = 128 hex chars
 mip_spi        bigint,                 # Security Parameter Index
 fa_rk		char(40),		# 20 octets = 40 hex chars
 key_expires    int,                    # Unix epoch

 unique index (sessionid)
);

# hotlineprofile
# If a subscription has a hotlineprofile and the hotlineprofile exists 
# in this table, the columns in that row will be used as the hotlining 
# attributes in the reply.
#
# One row for each type of hotlining required by the operator
# id is a unique integer id, referred to by subscription.hotlineprofile
# profileid is a string in the form realm + "/" + profile-id-string
#  which will be used as WiMAX-Hotline-Profile-ID. It can be used instead of
#  httpredirectionrule and ipredirectionrule, but it must make sense to the 
#  hotlining device (if there is one)
# httpredirectionrule is used as WiMAX-HTTP-Redirection-Rule. 
#  It is a string conforming to IPFilterRule in RFC3588
# ipredirectionrule is used as WiMAX-Hotline-Session-Timer
# nasfilterrule is used as NAS-Filter-Rule
create table hotlineprofile
(
 id			int NOT NULL PRIMARY KEY,
 profileid		char(100),
 httpredirectionrule 	char(100), 	# RFC 3588
 ipredirectionrule	char(100), 	# RFC 3588
 nasfilterrule		char(100),
 sessiontimer		int
);

# qosprofile descrives a quality of service profile.
# Not all fields are used at the same time. 
# Different combinations are valid for each 
# schedule type. If present, each column maps to a TLV type in the QoS-Descriptor
# attribute like this:
# globalscname 		QOSD_GLOBAL_SERVICE_CLASS_NAME
# scname		QOSD_SERVICE_CLASS_NAME
# scheduletype		QOSD_SCHEDULE_TYPE
# priority		QOSD_TRAFFIC_PRIORITY
# maxsusrate		QOSD_MAX_SUSTAINED_TRAFFIC_RATE
# minresrate		QOSD_MIN_RESERVED_TRAFFIC_RATE,
# maxburst		QOSD_MAX_TRAFFIC_BURST
# jitter		QOSD_TOLERATED_JITTER
# maxlatency		QOSD_MAX_LATENCY
# reducedresources	QOSD_REDUCED_RESOURCES_CODE
# flowtype		QOSD_MEDIA_FLOW_TYPE
# grantinterval		QOSD_UNSOLICITED_GRANT_INTERVAL
# sdusize		QOSD_SDU_SIZE
# unsolpollinginterval	QOSD_UNSOLICITED_POLLING_INTERVAL
# See Stage 3 doc, table 5-11 for permitted attributes in each Schedule-Type
create table qosprofile
(
 id			int NOT NULL PRIMARY KEY,
 globalscname           char(12),	# Hex encoded, As per IEEE80-2.16e
 scname			char(12),	# Hex encoded, As per IEEE80-2.16e
 scheduletype		int,		# As per IEEE80-2.16e
 priority		int,		# larger means higher priority
 maxsusrate		int,		# BPS
 minresrate		int,		# Bytes
 maxburst		int,		# Burst size bytes/sec
 jitter			int,		# ms
 maxlatency		int,		# ms
 reducedresources	int,		# flag
 flowtype		char(100),	# Hex encoded
 grantinterval		int,		# ms
 sdusize		int,		# bytes
 unsolpollinginterval	int		# ms
);

create table blacklist
(
 nai		char(100) NOT NULL PRIMARY KEY, # user@realm or MAC address
 reason         char(100) 
);

# TODO:
# prepaid_quotas
# ip_session
# pdflow?
# sdflow?
# segment?


# Some test data
# Obviously, you wont want these in your production database
insert into hotlineprofile (id, profileid, httpredirectionrule, ipredirectionrule, nasfilterrule, sessiontimer) values (1, "realm/id", "permit in ip 1.2.3.4/24", "permit out ip 1.2.3.4/24", "nas filter rule", 1000);

# This is a BE QoS, besteffort, 
insert into qosprofile (id, scheduletype, priority, maxsusrate) values (1, 2, 3, 1000);
# This is an ERT-VR
insert into qosprofile (id, scheduletype, priority, maxsusrate, minresrate, maxburst, jitter) values (2, 2, 3, 1000, 100, 1000, 10);

insert into subscriber (cui) values ('someCUI');
insert into subscription (nai, cui, psk, hotlineprofile, nasprofile) values ('mikem@open.com.au', 'someCUI', 'fred', 1, 'filter=1');

insert into blacklist (nai, reason) values ('fred@open.com.au', 'failed to pay bill');
insert into blacklist (nai, reason) values ('006021A50A24', 'abuse');

