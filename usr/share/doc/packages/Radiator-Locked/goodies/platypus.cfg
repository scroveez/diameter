# platypus.cfg
#
# Example Radiator configuration file that allows you to
# authenticate from and store accounting to the Platypus database
# from Boardtown (see http://www.boardtown.com)
#
# CAUTION: This interface is now obsolete, and you should use platypus7.cfg for recent 
# Platypus installations.
#
# You should consider this file to be a starting point only
# $Id: platypus.cfg,v 1.4 2012/06/27 23:27:18 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.

# You will probably want to change this to suit your site.
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>

<Realm DEFAULT>
	<AuthBy PLATYPUS>
		# Change DBSource, DBUsername, DBAuth for your database
		# See the reference manual
		DBSource	dbi:Sybase:fred
		DBUsername	platuser
		DBAuth		platuserpw

		# The basic PLATPYPUS module will 
		# insert values for 
		#    username, callstart, callend, sessid 
		# into the table 'radiusdat'
		# You can log additional data from each Stop by
		# adding AcctColumnDef lines like this, if you
		# have additional columns in your accounting table
		# As an example, here are some additional fields 
		# that you might have added by following the 
		# Instructions in the Platypus Help file under
		# 'Importing Additional Radius Information'
		#
		#AcctColumnDef data_in,Acct-Input-Octets,integer
		#AcctColumnDef data_out,Acct-Output-Octets,integer
		#AcctColumnDef ipaddress,Framed-IP-Address

		# BasicSelect specifies the SQL query used to fetch
		# user attributes from the Platypus database.
		# It is expected to return the following attributes in this order
		# password, active, timeleft, blockuser, guarantor and possibly other attributes 
		# as selected by AuthSelect.
		# %0 is replaced with the contents of AuthSelect, which is expected to be a 
		#  list of additional columns to select from the database
		# %1 is replaced with the user name
		# The default will work with the standard Platypus database and need not be changed:
		#BasicSelect select password, active, timeleft, blockuser, guarantor %0 from customer where username=%1

		# You can optionally fetch your own 
		# additional columns from the user
		# database when you fetch the password
		# in a similar way to AuthSQL. In this
		# example, you define an additional column in the
		# customer table called
		# maxsessions, which (if not NULL) will be used to
		# set Simultaneous-Use for the user. AuthSelect
		# is the SQL required to select _additional_ columns
		# from customer, so the comma is required
#		AuthSelect ,maxsessions
#		AuthColumnDef 0,Simultaneous-Use,check


	</AuthBy>
	# If you also need to add extra check and reply items,
	# Platypus has a RadiusNT compatibility package
	# that does allow you to set up per-user and per-service
	# reply items. If you want to use that, then you
	# should use AuthBy EMERALD instead. See emerald.cfg
	# If you dont want to use it, you can put generic check and
	# reply items in a separate users file:
#	AuthByPolicy	ContinueWhileAccept
#	<AuthBy FILE>
#		# Put a DEFAULT user in the file with the extra
#		# check and reply items you want applied to all users.
#		# You could also
#		# add user-specific check and reply items if you want.
#		Filename <whatever it is>
#	</AuthBy>
</Realm>
