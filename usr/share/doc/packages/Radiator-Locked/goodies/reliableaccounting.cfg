# reliableaccounting.cfg
#
# This example configuration file shows how you can proxy
# requests to remote radius server, and if the remote radius server
# does not reply (say, its offline, or the network is down)
# save the accounting data in an SQL database, for later
# delivery or retransmission
#
# You should consider this file to be a starting point only
# $Id: reliableaccounting.cfg,v 1.1 2000/05/29 05:16:36 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.

# You will probably want to change this to suit your site.
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>


# This will foward all requests to a remote Radius server
<Realm DEFAULT>
	<AuthBy RADIUS>
		Host fred.open.com.au	
		Secret mysecret

		# If no reply is received, send it to the AuthBy SQL below
		NoReplyHook sub {Radius::AuthGeneric::find('MySQL')->handle_request(${$_[0]});}
	</AuthBy>
</Realm>

# This will be called by the NoReplyHook if no reply is
# received. It ignores auth requests, and stores accounting to SQL
<AuthBy SQL>
	Identifier MySQL

	# Adjust DBSource, DBUsername, DBAuth to suit your DB

	DBSource	dbi:mysql:radius
	DBUsername	mikem
	DBAuth		fred

	# Do not do authentication
	AuthSelect 

	# You may want to tailor these for your ACCOUNTING table
	# You can add your own columns to store whatever you like
	AccountingTable	ACCOUNTING
	AcctColumnDef	USERNAME,User-Name
	AcctColumnDef	TIME_STAMP,Timestamp,integer
	AcctColumnDef	ACCTSTATUSTYPE,Acct-Status-Type
	AcctColumnDef	ACCTDELAYTIME,Acct-Delay-Time,integer
	AcctColumnDef	ACCTINPUTOCTETS,Acct-Input-Octets,integer
	AcctColumnDef	ACCTOUTPUTOCTETS,Acct-Output-Octets,integer
	AcctColumnDef	ACCTSESSIONID,Acct-Session-Id
	AcctColumnDef	ACCTSESSIONTIME,Acct-Session-Time,integer
	AcctColumnDef	ACCTTERMINATECAUSE,Acct-Terminate-Cause
	AcctColumnDef	NASIDENTIFIER,NAS-Identifier
	AcctColumnDef	NASPORT,NAS-Port,integer
	AcctColumnDef	FRAMEDIPADDRESS,Framed-IP-Address
</AuthBy>

