# fidelio-hotspot.cfg
#
# Example Radiator configuration file for operating a wired or wireless hotspot
# with authenticating from and billing
# to a Micros-Fidelio Property Management System (PMS)
# Previous version of this config file used the fidelio-hotspot-hook.pl, which
# is now obsolete and replaced by AuthFIDELIOHOTSPOT.pm
#
# See radius.cfg for more complete examples of features and
# syntax, and refer to the reference manual for a complete description
# of all the features and syntax.
# See goodies/fidelio-hotspot.sql for sample SQL schema
# Test with:
#  echo "delete from sessions;" |mysql -umikem -pfred hotspot
#  perl goodies/fideliosim.pl
#  perl radpwtst -user 001 -password 12345 -noacct
#
# You should consider this file to be a starting point only
# $Id: fidelio-hotspot.cfg,v 1.8 2014/11/11 13:38:01 hvn Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace		4

# By default, Microtik and some other hotspots default to 1812/1813
AuthPort 1812,1645
AcctPort 1813,1646

# Make sure that Secret agrees with the RADIUS shared secret configured into your hotspot RADIUS configuration
<Client DEFAULT>
	Secret	mysecret
</Client>

<Handler>
       # This clause authenticate Access-Requests against room number and guest number from 
       # the Fidelio Opera database.
       # This clause also manages the prepaid sessions for each user.
       # If there is no database entry for this room/guest/mac, create one and charge the room
       # If there is a	database entry for this room/guest/mac but it has expired, 
       # extend it and charge the room
       # If there is a	database entry for this room/guest/mac but it has not expired, accept, with
       # a Session-Timeout of the remaining time from the record.
       <AuthBy FIDELIOHOTSPOT>

	       # Details of how to contact the prepaid session database
	       # See AuthSQL for details
	       DBSource	dbi:mysql:hotspot
	       DBUsername	mikem
	       DBAuth		fred

	       Protocol tcp
	       Port 5010
	       Host localhost

	       # DO not use AuthBy FIDELIO functions for accounting:
	       HandleAcctStatusTypes noneatall

	       # Validity time in seconds of plan purchased
	       # Default 86400 seconds (1 day)
	       BlockDuration 86400
	       
	       # Default price for plan
	       # Price in database overrides this value
	       BlockPrice 900

	       # ServiceAttribute defines the RADIUS attribute that is
	       # used select the desired prepaid service or plan. On
	       # Mikrotik login page you can create a menu as shown
	       # below to display the different purchase
	       # options. Note: "name=radius0-9048" is OSC-AVPAIR.
	       #  <tr><td>Service:</td><td>
	       #  <select name="radius0-9048">
	       #  <option value="Mikrotik-Service=free">best effort (free)</option>
	       #  <option value="Mikrotik-Service=premium">premium ($5)</option>
	       #  </select></td></tr>
	       #ServiceAttribute OSC-AVPAIR

	       # If it is possible that there are multiple instances
	       # of the ServiceAttribute in the request, you can use
	       # an optional prefix to choose the correct instance.
	       #ServiceAttributePrefix Mikrotik-Service=

	       # By default upgrade or renewal of the current plan is
	       # automatically processed and charged. With this option
	       # you can ask the guest to confirm the charge first.
	       # With Mikrotik you can show the message to the guest
	       # by including
	       #  $(if error)<br /><div style="color: #FF8080; font-size: 14px">$(error)</div><br>$(endif)
	       # on the Mikrotik login page 
	       #ConfirmUpgradeOrRenew
	       #ConfirmationMessage "You are going to upgrade or renew your plan, please login again to confirm the charge"

	       # This one uses the last part of the guest name (case sensitive) as the
	       # password. This is usually the guest surname
	       UserPasswordHook sub {my @n = split(/\s/, $_[1]->{'GN'}); return $n[$#n];}

	       # Need this to ensure the Guest Number is included in the postings
	       # Required when there are multiple guests per room
	       #PostingExtraFields G#,%4

	       # You can add extra attributes in the reply here if you wish
	       # to set limits or controls over access
	       #AddToReply Mikrotik-Recv-Limit-Gigawords=1,Mikrotik-Xmit-Limit-Gigawords=1
       </AuthBy>

	# Normally, when Radiator rejects an Access-Request, it sets the reply message to
	# “Request Denied”. This optional parameter forces Radiator to put an additional Reply-
	# Message into Access-Reject indicating why the rejection occurred.
	RejectHasReason
</Handler>
