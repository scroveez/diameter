# opie.cfg
#
# Example Radiator configuration file.
# This very simple file will allow you to get started with 
# OPIE authentication, a one-time-password system.
#
# Requires opie-2.4 or better from http://www.inner.net/opie 
# and the Authen-OPIE-1.00 (or later) perl module 
# or better from ftp://pooh.urbanrage.com/pub/perl
#
# Beefore testing this, you need to ensure you have set up an opie
# pass phrase and seed using opiepasswd:
# opiepasswd -c -s 12345 mikem
#
# If you try to log in with an empty password, AuthBy OPIE will
# issue a Challenge with the OPIE challenge in the Reply-Message.
# You can then try again to log in with the correct OPIE 
# response as the password:
#
# oscar$ ./radpwtst -noacct -user mikem -password "" 
# sending Access-Request...
# Challenge: OPIE Challenge: otp-md5 496 os3542 ext
#    (enter otp-md5 496 os3542 ext into opiekey or WinKEy etc, and get
#    'gas hoof mall got slam lane')
# oscar$ ./radpwtst -noacct -user mikem -password "gas hoof mall got slam lane" 
# sending Access-Request...
# OK
#
# Caution: you must usually run Radiator as root so it can access the
# opie key file /etc/opiekeys.
#
# See radius.cfg for more complete examples of features and
# syntax, and refer to the reference manual for a complete description
# of all the features and syntax.
#
# You should consider this file to be a starting point only
# $Id: opie.cfg,v 1.2 2004/08/23 11:51:28 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to change this to suit your site.
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>

<Realm DEFAULT>
	<AuthBy OPIE>
		# No special parameters, but you can use
		# AddToReply, DefaultReply
		#  and other generic paramters.
	</AuthBy>
</Realm>

