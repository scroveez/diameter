# safeword.cfg
#
# Example Radiator configuration file.
# This very simple file will allow you to get started with 
# authentication from SafeWord PremierAccess (SPA) from SecureComputing 
# http://www.securecomputing.com
#
# SafeWord PremierAccess supports both static passwords and tokens.
# This module supports PAP, CHAP, TTLS-PAP, EAP-OTP and EAP-GTC
# Caution: in order to support CHAP, the user must have a fixed password
# profile with 'case sensitive password' enabled in the SafeWord server.
# Only the FIRST authenticator configured into SPA for the user will be used
#
# We suggest you start simple, prove to yourself that it
# works and then develop a more complicated configuration.
#
# This example will authenticate from a SafeWord PremierAccess server
# running on 203.63.154.24. You will certainly have to change this to suit
# your SafeWord Premier Acces server.
#
# It will accept requests from any client and try to handle request
# for any realm.
# And it will print out what its doing in great detail.
#
# See radius.cfg for more complete examples of features and
# syntax, and refer to the reference manual for a complete description
# of all the features and syntax.
#
# You should consider this file to be a starting point only
# $Id: safeword.cfg,v 1.2 2008/05/08 23:19:01 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>

<Realm DEFAULT>
	<AuthBy SAFEWORD>
		# The name or address of the host where the SafeWord
		# PremierAccess server runs
		# Defaults to localhost.
		# Set this to the address of the SafeWord PremierAccess server
#		Host localhost
		Host 203.63.154.24

		# Port to connet to on Host.
		# Defaults to 5031, the default SafeWord EASSP2 port
		#Port 5031

		# You can specify which EAP types can be used
		# One-Time-Password and Generic-Token are supported
		EAPType One-Time-Password,Generic-Token

		# There are a number of parameters for controlling the SSL
                # connection to the SafeWord server. These are rarely
		# required:

		# You can set these parameters if client
		# verification is required. is
		# SSLVerify can be none, optional or require.
		# Defaults to none
		#SSLVerify require
		# If you want to verify that the peer certificate has been signed
                # by a reputable certificate authority, then you should use this
                # option to locate the file containing the certificate(s) of the
                # reputable certificate authorities if it is not already in the
                # file certs/my-ca.pem
		#SSLCAFile %D/certificates/demoCA/cacert.pem
		# If you are unusually friendly with the OpenSSL documentation, you
                # might have set yourself up a directory containing several trusted
                # certificates as separate files as well as an index of the cer-
                # tificates.  If you want to use that directory for validation pur-
                # poses, and that directory is not ca/, then use this option to
                # point IO::Socket::SSL to the right place to look.
		#SSLCAPath /path/to/ca/directory
		# If your SSL certificate is not in the default place
                # (certs/server-cert.pem for servers, certs/client-cert.pem for
                # clients), then you should use this option to specify the location
                # of your certificate.  Note that a key and certificate are only
                # required for an SSL server, so you do not need to bother with
                # these trifling options should you be setting up an unauthenti-
                # cated client.
		#SSLCAClientCert %D/certificates/cert-clt.pem
		# If your RSA private key is not in default place
                # (certs/server-key.pem for servers, certs/client-key.pem for
                # clients), then this is the option that you would use to specify a
                # different location.  Keys should be PEM formatted,
		# If a passwrod is required to decode the private key
		# file, specifiy the password in SSLCAClientKeyPassword
		#SSLCAClientKey %D/certificates/cert-clt.pem
		#SSLCAClientKeyPassword whatever

		# You can make different types of reply depending on the group
		# of the authenticated user, if there are ActionData groups 
		# sent back by SafeWord server
		GroupReply RO,Service-Type = Administrative-User,\
		    cisco-avpair = "shell:priv-lvl=1"
		GroupReply RW,Service-Type = Administrative-User,\
		    cisco-avpair = "shell:priv-lvl=15",

	</AuthBy>
</Realm>

