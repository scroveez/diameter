# ntlm.cfg
#
# Example Radiator configuration file.
# This very simple file will allow you to get started with 
# AuthBy NTLM, which allows Radiator running on a Linux or Unix
# system to authenticate to a Windows domain controller, with the
# assistance of utilities from the Samba suite (www.samba.org).
#
# AuthBy NTLM requires that ntlm_auth (and winbindd), both part of Samba,
# are installed and configured 
# correctly. See goodies/smb.conf.winbindd for sample configuration and installation hints.
#
# AuthBy NTLM runs the Samba utility ntlm_auth as a child process in order to authenticate
# requests. It keeps ntlm_auth running between requests and passes it authentication 
# information on stdin, and gets back the authentication results from stdout. 
# Caution:  AuthBy NTLM blocks while waiting for the result output of ntlm_auth.
#
# Because AuthBy NTLM requires that ntlm_auth be properly installed and configured with winbindd, 
# it is vitally important that you confirm that ntlm_auth is working properly before trying
# to use AuthBy NTLM. You can test ntlm_auth like this:
#  ntlm_auth --username=yourusername --domain=yourdomain --password=yourpassword
# if that does not work for a valid username and password, there is no way that 
# AuthBy NTLM will work. Make sure  ntlm_auth works first!
#
# Works with PAP, MSCHAP, MSCHAPV2
# Radiator must be run as root in order to do MSCHAP or MSCHAPV2 via ntlm_auth
# or it must belong to a group that can access the winbindd socket.
#
# We suggest you start simple, prove to yourself that it
# works and then develop a more complicated configuration.
#
# See radius.cfg for more complete examples of features and
# syntax, and refer to the reference manual for a complete description
# of all the features and syntax.
#
# You should consider this file to be a starting point only
# $Id: ntlm.cfg,v 1.8 2014/12/01 21:59:13 hvn Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
</Client>

<Handler>
	<AuthBy NTLM>
		# The name of the ntlm_auth program, supplied with
		# Samba. Defaults to '/usr/bin/ntlm_auth  --helper-protocol=ntlm-server-1'
		# You can require that authenticated users belong to a certain group with:
		#NtlmAuthProg /usr/bin/ntlm_auth  --helper-protocol=ntlm-server-1 --require-membership-of=MyGroupName
		# or you can specify that the NTLM authentication requests appear to come from a workstation with
		# a specified name. This can be used to restrict authentication for certain users by setting
		# workstation requirements in their Windows user configuration.
		#NtlmAuthProg /usr/bin/ntlm_auth  --helper-protocol=ntlm-server-1 --workstation=MyWorkstationName

		# Specifies which Windows Domain is ALWAYS to be used to authenticate
		# users (even if they specify a different domain in their username). 
		# Special characters are supported. Can be an Active
		# directory domain or a Windows NT domain controller 
		# domain name
		#Domain OPEN

		# Specifies the Windows Domain to use if the user does not
		# specify a domain in their username.
		# Special characters are supported. Can be an Active
		# directory domain or a Windows NT domain controller 
		# domain name
		DefaultDomain OPEN

		# IT is also possible to control how the user name and
		# domain are derived from User-Name. By default they
		# are the domain\name, overridden by Domain and
		# DefaultDomain parameters. You should never need to
		# do this: the username is the prefix pf User-Name and
		# the domain is the realm from User-Name:
		#UsernameFormat %U
		#DomainFormat %R

		# You can force AuthBy NTLM to strip any realm from the
		# username before authenticating to the domain
                # controller 
		#UsernameMatchesWithoutRealm
		  
	</AuthBy>
</Handler>

