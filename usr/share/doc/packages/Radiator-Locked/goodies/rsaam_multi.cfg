# rsaam_multi.cfg
#
# Example Radiator configuration file.
# This very simple file will allow you to get started with 
# a simple system. You can then add and change features.
# We suggest you start simple, prove to yourself that it
# works and then develop a more complicated configuration.
#
# It works by examining the User-Password of the first request of any RADIUS authentication
# conversation. If the password is 4 characters or less, it is assumed to be an OnDemand PIN
# and is directed to the OnDemand AuthBy, else it is sent to the SecurID AuthBy. 
# A pseudo-attribute OSCTargetDirector is used to direct the request to the correct 
# Handler and thence AuthBy. After passing through the AuthBy 
# (where often the reply will include a State attribute), the State will be prepended 
# by another distinctive string that will allow us to direct subsequent requests that are 
# part of the same authentication conversation to the same target AuthBy. 
# This ensures that New Pin, Next Tokencode conversations etc are correctly handled by the 
# AuthBy that initiated it.
#
# This means that if the user attempts to log in with a User-Password of 4 characters or 
# less it is assumed to be an OnDemand PIN, and 
# the entire conversation (including any PIN changes etc) will be handled by the OnDemand AuthBy.
# 
# If the initial User-Password is more than 4 characters, it is assumed to be a PIN+Tokencode, and 
# the entire conversation (including any PIN changes etc) will be handled by the SecurID AuthBy.
#
# Requires the State attribute to handled as per RFCs by the RADIUS client.
#
# See also rsaam_multi_hook.pl which does part of the work in a PreHandlerHook
#
# See radius.cfg for more complete examples of features and
# syntax, and refer to the reference manual for a complete description
# of all the features and syntax.
#
# You should consider this file to be a starting point only
# Copyright (C) Open System Consultants
# Author: Mike McCauley (mikem@open.com.au)
# $Id: rsaam_multi.cfg,v 1.3 2010/08/10 22:37:25 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
	PreHandlerHook file:"goodies/rsaam_multi_hook.pl"
</Client>

# This one handles OnDemand
# OSCTargetDirector is a pseudo attribute added by rsaam_multi_hook.pl
<Handler OSCTargetDirector=OnDemand>
	 # Auth with OnDemand
	 # Change Host SessionUsername SessionPassword to suit
	<AuthBy RSAAM>
		Host boodgie.open.com.au:7002
		SessionUsername CmdClient_v8hf8vbl
		SessionPassword kEplAb9hJh
		SessionRealm weblogic
		NoDefault
		Policy OnDemand
	</AuthBy>


	# Make sure subsequent requests part of this conversation come back to this clause
	# by prepending something to the State
	PostProcessingHook sub { my $rp = ${$_[1]}; \
			   $rp->change_attr('State', 'OSCTARGET=OnDemand;' . $rp->get_attr('State'));}

</Handler>

# This one handles SecurID
# OSCTargetDirector is a pseudo attribute added by rsaam_multi_hook.pl
<Handler OSCTargetDirector=SecurID>
	 # Auth with SecurID_Native
	 # Change Host SessionUsername SessionPassword to suit
	<AuthBy RSAAM>
		Host boodgie.open.com.au:7002
		SessionUsername CmdClient_v8hf8vbl
		SessionPassword kEplAb9hJh
		NoDefault
		Policy SecurID_Native
	</AuthBy>

	# Make sure subsequent requests part of this conversation come back to this clause
	# by prepending something to the State
	PostProcessingHook sub { my $rp = ${$_[1]}; \
			   $rp->change_attr('State', 'OSCTARGET=SecurID;' . $rp->get_attr('State'));}
</Handler>

