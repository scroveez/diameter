# simple.cfg
#
# Example Radiator configuration file.
# This very simple file will allow you to get started with 
# a simple Mobile IP system. You can then add and change features.
# We suggest you start simple, prove to yourself that it
# works and then develop a more complicated configuration.
#
# This example will authenticate from a standard users file in
# the current directory
# It will accept requests from any client and try to handle request
# for any realm.
# And it will print out what its doing in great detail.
#
# See radius.cfg for more complete examples of features and
# syntax, and refer to the reference manual for a complete description
# of all the features and syntax.
#
# You should consider this file to be a starting point only
# $Id: mobileip.cfg,v 1.1 2002/06/17 06:20:39 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>

<Realm DEFAULT>
	AuthByPolicy ContinueWhileAccept

	# First we authenticate user and HAs in the usual way:
	# If you are doing HA Key Distribution with, the authentication 
	# database requires needs an entry for each potential FA-HA pair
	# the user anmes are in the form FAaddress.HAAddress, eg
	# 1.2.3.4.203.63.154.20
	# Ordinary users 
	<AuthBy FILE>
		Filename ./users
	</AuthBy>

	# If the HA or user authenticated, we fall through to here
	# and generate apropriate reply items, depending on whether its
	# an HA or FA request
	<AuthBy MOBILEIP>

		# You can stop MOBILEIP from handling HA key distribution
		# requests by setting HandleHARequests to 'no'
		#HandleHARequests no

		# You can stop MOBILEIP from handling FA user authentication
		# requests by setting HandleFARequests to 'no'
		#HandleFARequests no

		# You can control the lifetime (in seconds) of internally
		# generated S keys with SLifetime, default 3600
		#SLifetime 6000

		# You can control the length (in octets) of internally
		# generated S keys with SLength, default 16
		#SLength 36

		# If a user does not have their own 3GPP2-Home-Agent-Address,
		# this will be used as the 3GPP2-Home-Agent-Address
		# IF a user has no 3GPP2-Home-Agent-Address, and there
		# is no DefaultHAAddress, they will be rejected
		# If the address is 0.0.0.0, then any suggested
		# 3GPP2-Home-Agent-Address in the request will be used
		DefaultHAAddress 192.10.10.2

	</AuthBy>
</Realm>

