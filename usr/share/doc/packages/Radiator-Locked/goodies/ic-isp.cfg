# ic-isp.cfg
#
# Example Radiator configuration file that allows you to
# authenticate from an IC-ISP mySQL database See www.ic-isp.com for details about
# purchasing IC-ISP.
#
# IC-ISP is a full source ISP billing package for Unix.
# It uses mySQL as the database, and has a web interface.
#
# This configuration file allows you to authenticate users directly from the IC_ISP mysql database.
# As soon as you add, change, enable or disable users, it will immediately
# affect Radius authentications.
#
# You need to install and configure IC-ISP before using this Configuration file
# with Radiator.
#
# Accounting is not supported
# Works with IC-ISP 2.0.24 and later
#
# You should consider this file to be a starting point only
# $Id: ic-isp.cfg,v 1.1 2003/06/19 06:19:19 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
Trace 		4

# You will probably want to change this to suit your site.
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>

# This will authenticate users from SUBSCRIBERS
<Realm DEFAULT>
    <AuthBy SQL>
	# Adjust DBSource, DBUsername, DBAuth to suit your IC-ISP database:
	# DBSource source be set to dbi:mysql:database where database is the
	#  sames as the database line in your IC-ISP config file, usually in
	#  /usr/local/icisp/config/ic-isp.conf
	# DBUsername should be the same as dbusername from /usr/local/icisp/config/ic-isp.conf
	# DBAuth should be the same as dbpassword from /usr/local/icisp/config/ic-isp.conf
	DBSource	dbi:mysql:icisp
	DBUsername	icisp
	DBAuth		icisp

	# This is a large join to get all the info we need to authenticate a user
	# IT honours the following user restrictions:
	#  Password (on Services page)
	#  Port Limit (on Services page)
	#  Static IP address (on Services page)
	#  Status (Enabled/Disabled) (on Services page)
	#  Start Date (on Customer Information page)
	#  Stop Date (on Customer Information page)
	AuthSelect select s2.value password, s3.value maxsession, s4.value staticip, \
		if (strcmp(service.status, 'Enabled'), 'Reject', NULL), \
		if (strcmp(account.start_date, '0000-00-00'),  account.start_date, NULL), \
		if (strcmp(account.close_date, '0000-00-00'),  account.close_date, NULL) \
		from service_parms s1, service_parms s2, service_parms s3, service_parms s4, \
			service, account \
		where s1.value=%0 \
		and s2.serviceid=s1.serviceid and s2.parmnum=2 \
		and s3.serviceid=s1.serviceid and s3.parmnum=3 \
		and s4.serviceid=s1.serviceid and s4.parmnum=4 \
		and service.id=s1.serviceid \
		and account.id=service.accountid
	AuthColumnDef 0,Password,check
	AuthColumnDef 1,Simultaneous-Use,check
	AuthColumnDef 2,Framed-IP-Address,reply
	AuthColumnDef 3,Auth-Type,check
	AuthColumnDef 4,ValidFrom,check
	AuthColumnDef 5,ValidTo,check

	
	# Dont bother to look up DEFAULT users if the named user is not present
	NoDefault

	# Many NASs especially Ciscos like to get this in Access-Accepts:
	AddToReply Framed-Protocol = PPP,Service-Type=Framed-User
    </AuthBy>
</Realm>
