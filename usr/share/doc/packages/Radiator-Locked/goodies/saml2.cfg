# saml2.cfg
#
# Example Radiator configuration file.
# This very simple file will allow you to get started with 
# a simple SAML2 system. You can then add and change features.
# We suggest you start simple, prove to yourself that it
# works and then develop a more complicated configuration.
#
# This example will authenticate from a standard users file.
# This, if successful, it will contact a SAML2 ECP server, such as from Moonshot
# and get an Assertion for the user, and put the assertion in a SAML-AAA-Assertion
# reply item.
# And it will print out what its doing in great detail.
#
# test with:
#  radpwtst -noacct -user steve -trace 5 -timeout 10 -password test
#
# Requires:
#  Net::SAML2
#  Crypt::OpenSSL
#  XML::XPath
#  XML::Generator
#  Moose
#  MooseX
#  Digest::SHA
#  MIME::Base64
#
# See radius.cfg for more complete examples of features and
# syntax, and refer to the reference manual for a complete description
# of all the features and syntax.
#
# You should consider this file to be a starting point only
# $Id: saml2.cfg,v 1.2 2012/06/14 22:05:52 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>

<Realm DEFAULT>
       AuthByPolicy ContinueWhileAccept

       # First authenticate the user by whatever means you see fit
       <AuthBy FILE>
       	       Filename ./users
	</AuthBy>

	# IF authentication succeeds, get the users Moonshot/SAML2 attributes
	# from an IdP or AAA
	<AuthBy SAML2>
		# File name of the metadata file containing the information about the IdP or 
		# AAA system to contact. You must get this from the IdP or AAA operator
		IdPMetadata /usr/local/etc/moonshot/metadata.xml

		#Indicates whether ECP should be used to request the SAML Assertion from the IdP
		UseECP
		
		# File name of the file containing the CA Certificate of the certificate	
		# in the IdPMetadata. Used to verify the IdP Certificate is valid
		IdPCACertificateFile /usr/local/etc/moonshot/cu-dev-idp-cert.pem

		# Identity that identifies this instance of Radiator to the IdP or AAA. 
		# You must previously have sent the metadata for this instance of Radiator, 
		# acting as an SP to the IdP or AAA operator, and SPEntityID must match the 
		# EntityDescriptor entityID in that metadata.
		SPEntityID https://radiator.open.com.au/shibboleth

		# Password used to authenticate access to the ECP Web server
		# This is NOT a per-user password: ait authenticaes access to the web server
		ECPServerAccessPassword test

		# These arent working for UC yet:
		SPKeyFile /usr/local/etc/moonshot/pki/ssl.key
		SPCertificateFile /usr/local/etc/moonshot/pki/ssl.cert

		# Indicates whether Requests sent to the IdP should be signed using the SP 
		# certificate from SPCertificateFile
		# CAUTION: this is not known to work correctly yet
		SignRequest 0

		# Indicates whether responses from teh IdP should have the Signature verified against 
		# the IdP certificate in IdPMetadata
		# CAUTION: this is not known to work correctly yet
		VerifyResponse 0
	</AuthBy>
</Realm>

