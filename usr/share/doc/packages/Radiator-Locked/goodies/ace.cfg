# ace.cfg
#
# This example Radiator configuration file shows you how to get started with
# authentication direct to RSA Authentication Manager (formerly SecurID ACE/Server).
# 
# Correct operation of this module requires:
# 1. Installation of the Authentication API on the Radiator host
# 2. Fetch, build and install Authen-ACE4 perl module from CPAN
#    or http://www.open.com.au/radiator-free-downloads.
#    A binary for Windows platforms is included in the Radiator
#    distribution, which you can install with this command
#    ppm install file://c:path/to/your/radiator/dist/ppm/Authen-ACE4.ppd
#    Unix users will need to build the module in the perl module
#    in the usual way, see instructions in the Authen-ACE4 distribution.
# 3. Authentication API on the Radiator host configured to talk to the RSA AM Server.
# 4. A Radiator config file similar to this one.
#
# See radius.cfg for more complete examples of features and syntax,
# and refer to the reference manual for a complete description of all
# the features and syntax.
#
# You should consider this file to be a starting point only
# $Id: ace.cfg,v 1.10 2013/08/29 06:58:47 hvn Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
</Client>

<Realm DEFAULT>
	<AuthBy ACE>
		# On Unix, you need to tell the Authentication API the
		# directory where the sdconf.rec file is and where the
		# node secret will be stored.  Make sure the directory
		# and its files is readable and writable by the user
		# id that runs Radiator. This may require running
		# Radiator with root priveleges.
		# Not required on Windows
		ConfigDirectory /opt/ace/data

		# Some NASs, notably some Juniper devices have
                # non-standard behaviour in New Pin Mode: when the user is
		# asked whether they want to set their PIN, the NAS
		# automatically gets the new PIN and returns it to the RADIUS
		# server, which is expected to use it to set the PIN
		# immediately. This flag enables compatibility with this
		# behaviour by automatically answering 'n' when the user would
		#normally be asked 'Do you want the system to generate your new PIN'
		#EnableFastPINChange
	</AuthBy>
</Realm>

