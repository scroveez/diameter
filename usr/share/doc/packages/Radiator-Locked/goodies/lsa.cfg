# lsa.cfg
#
# Example Radiator configuration file.
# This very simple file will allow you to get started with PEAP
# authentication. We suggest you start simple, prove to yourself that
# it works and then develop a more complicated configuration.
#
# This example will authenticate users from a Windows LSA, which
# permits authentication against any Windows Active Directory
# Domain. It will accept requests from any client and try to handle
# request for any realm.
#
# To use this example, Radiator must be run on Windows as a user that
# has the 'Act as part of the operating system' security policy
# enabled. This may not possible with Windows Home and other limited
# editions.
# 
# Requires the Win32-Lsa perl module from Open System Consultants.
# Install the Win32-Lsa perl module using PPM and ActivePerl or
# Strawberry Perl like this:
#   ppm install http://www.open.com.au/radiator/free-downloads/Win32-Lsa.ppd
#
# Users will only be authenticated if they have the 'Access this
# computer from the network' security policy enabled. Their other
# account restrictions will also be checked. CHAP passwords can only
# be authenticated if the user has their 'Store password using
# reversible encryption' option enabled in their Account.
#
# See radius.cfg for more complete examples of features and syntax,
# and refer to the reference manual for a complete description of all
# the features and syntax.
#
# You should consider this file to be a starting point only
# $Id: lsa.cfg,v 1.12 2014/11/22 01:30:09 hvn Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
</Client>

<Handler>
	<AuthBy LSA>
		# Specifies which Windows Domain is ALWAYS to be used
		# to authenticate users (even if they specify a
		# different domain in their username).  Empty string
		# means the local machine only Special characters are
		# supported. Can be an Active directory domain. Empty
		# string (the default) means the local machine
		#Domain OPEN

		# Specifies the Windows Domain to use if the user does
		# not specify a doain domain in their username.
		# Special characters are supported. Can be an Active
		# directory domain. Empty string (the default) means
		# the local machine
		#DefaultDomain OPEN

		# If users will log in with a realm in the form
		# username@realm, you will need to set
		# UsernameMatchesWithoutRealm for LSA authentication
		# to succeed.
		# UsernameMatchesWithoutRealm

		# This specifies the workstation to the LSA. It might
		# be used to check whether the the user is permitted
		# to log in. If the user has any workstation logon
		# restrictions, this is the name that it will be
		# checked against. Defaults to '', which means that
		# workstation restrictions will not be checked
		#Workstation WLAN

		# You can check whether each user is the member of a
		# windows group with the Group parameter. If more than
		# one Group is specified, then the user must be a
		# member of at least one of them. Requires
		# Win32::NetAdmin (which is installed by default with
		# ActivePerl). If no Group parameters are specified,
		# then Group checks will not be performed.
		#Group Administrators
		#Group Domain Users

		# You can force which domain controller will be used
		# to check group membership with the DomainController
		# parameter. If no Group parameters are specified,
		# DomainController will not be used. Defaults to empty
		# string, meaning AuthBy LSA will try to find the
		# controller to use based on the users domain. If that
		# fails, then the default controller of the host where
		# this instance of Radiator is running.
		#DomainController zulu

		# If you specify EAPType LEAP, you can also handle
		# Cisco LEAP with any LSA native authentication
		EAPType LEAP
	</AuthBy>
</Handler>