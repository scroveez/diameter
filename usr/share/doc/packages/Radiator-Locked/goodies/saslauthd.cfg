# saslauthd.cfg
#
# Example Radiator configuration file.
# This very simple file will allow you to get started with 
# AuthBy SASLAUTHD.
#
# We suggest you start simple, prove to yourself that it
# works and then develop a more complicated configuration.
#
# saslauthd is a Unix server program that can be configured to
# authenticate from a variety of sources, including PAM, Kerberos,
# DCE, shadow password files, IMAP, LDAP, SIA or a special SASL user
# password file.
#
# This example will authenticate from a saslauthd server running on
# the same host by connecting to its UNIX socket at /var/lib/sasl2/mux
# It will authenticate using whatever method saslauthd has been
# configured to use (typically by default it uses PAM, but you can
# configure sdaslauthd to suit yourself)
# And it will print out what its doing in great detail.
#
# Requires that saslauthd be installed and configure on the Radiator
# host
#
# See radius.cfg for more complete examples of features and
# syntax, and refer to the reference manual for a complete description
# of all the features and syntax.
#
# You should consider this file to be a starting point only
# $Id: saslauthd.cfg,v 1.2 2005/07/24 11:29:18 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>

<Realm DEFAULT>
	<AuthBy SASLAUTHD>
		# You can contro; the name of the UNIX socket to use to
		# connect to saslauthd. Defaults to /var/lib/sasl2/mux
		#SocketPath /var/state/saslauthd

		# You can control the service name that will be passed
		# to saslauthd in each authentication request. The
		# service name is used by some types of saslauthd
		# authentication methods, for example if saslauthd is
		# using PAM, then this specifies the PAM service name
		# to use. Defaults to 'login'
		#Service system-auth
	</AuthBy>
</Realm>

