# radmin.cfg
#
# Example Radiator configuration file to interface to the
# Radmin user management package from Open System Consultants
# (http://www.open.com.au/radmin)
# This variation shows how to record Tacacs+ commands to the Radmin
# RADCOMMANDAUDIT table for auditing
#
# You should consider this file to be a starting point only
# $Id $

Foreground
LogStdout
LogDir		.
DbDir		.

# Don't turn this up too high, since all log messages are logged
# to the RADMESSAGES table in the database. 3 will give you everything
# except debugging messages
Trace 4

# You will probably want to change this to suit your site.
# You should list all the clients you have, and their secrets
# If you are using the Radmin Clients table, you will probably
# want to disable this.
<Client DEFAULT>
	Secret	mysecret
</Client>

# You can put additonal (or all) client details in your Radmin
# database table
# and get their details from there with something like this:
# You can then use the Radmin 'Add Radius Client' to add new clients.
<ClientListSQL>
	DBSource	dbi:mysql:radmin:localhost
	DBUsername	radmin
	DBAuth		radminpw

	# If RefreshPeriod is set to non-zero, it specifies the period in seconds that the client list will
	# be refreshed by rereading the database. Each RefreshPeriod,
	# any Clients previously created by this ClientList are cleared
	# and a new set of clients read from the database.
	# Clients defined in the configuration file will not be clobbered.
	# The same effect can be got by signalling the process with with SIGHUP
	#RefreshPeriod 600
</ClientListSQL>

# You can arrange for all Tacacs+ commands ececuted on your Taacacs+ capable router
# to be recorded to a table and then audited with RAdmin (RAdmin version 1.15 required)
<ServerTACACSPLUS>
	AddToRequest OSC-Environment-Identifier=Tacacs
</ServerTACACSPLUS>

# Save tacacs command line accounting to RADCOMMANDAUDIT
<AuthBy SQL>
	Identifier SqlAcctTacacs

	DBSource	dbi:mysql:radmin:localhost
	DBUsername	radmin
	DBAuth		radminpw

	# We never do authentication, only accounting
	AuthSelect

	AccountingTable	RADCOMMANDAUDIT
	AcctColumnDef	TIME_STAMP,Timestamp,integer
	AcctColumnDef	USERNAME,User-Name
	AcctColumnDef	ACCTSTATUSTYPE,Acct-Status-Type,integer
	AcctColumnDef	ACCTSESSIONID,Acct-Session-Id
	AcctColumnDef	NASIPADDRESS,NAS-IP-Address
	AcctColumnDef	NASPORTID,NAS-Port-Id
	# cisco-cmd is the result of auto converting cisco-avpairs
	# into private a RADIUS attribute by createavpairs.pl
	AcctColumnDef	CMD,cisco-cmd

	# If accounting fails, try to log to a file
	AcctFailedLogFileName %L/acctfaillog-tacacs
</AuthBy>

# Handle TACACS accounting
# createavpairs.pl converts cisco-avpair="name=value" into private
# radius attributes of the form name=value, which can be logged by name
# in SqlAcctTacacs
<Handler OSC-Environment-Identifier=Tacacs,Request-Type=Accounting-Request>
	Identifier TacacsAcctHandler
	# Reformat interesting data in Tacacs accounting
	# So we can log the accounting sensibly
	PreProcessingHook	file:"goodies/createavpairs.pl"
	AuthBy SqlAcctTacacs
</Handler>

# Handle everyone with RADMIN
<Handler>
	<AuthBy RADMIN>
		# Change DBSource, DBUsername, DBAuth for your database
		# See the reference manual. You will also have to 
		# change the one in <SessionDatabase SQL> below
		# so its the same
		DBSource	dbi:mysql:radmin:localhost
		DBUsername	radmin
		DBAuth		radminpw

		# Never look up the DEFAULT user 
		NoDefault

		# You can add to or change these if you want, but you
		# will probably want to change the database schema first
		AccountingTable	RADUSAGE
		AcctColumnDef	USERNAME,User-Name
		AcctColumnDef	TIME_STAMP,Timestamp,integer
		AcctColumnDef	ACCTSTATUSTYPE,Acct-Status-Type,integer
		AcctColumnDef	ACCTDELAYTIME,Acct-Delay-Time,integer
		AcctColumnDef	ACCTINPUTOCTETS,Acct-Input-Octets,integer
		AcctColumnDef	ACCTOUTPUTOCTETS,Acct-Output-Octets,integer
		AcctColumnDef	ACCTSESSIONID,Acct-Session-Id
		AcctColumnDef	ACCTSESSIONTIME,Acct-Session-Time,integer
		AcctColumnDef	ACCTTERMINATECAUSE,Acct-Terminate-Cause,integer
		AcctColumnDef	FRAMEDIPADDRESS,Framed-IP-Address
		AcctColumnDef	NASIDENTIFIER,NAS-IP-Address
		AcctColumnDef	NASIDENTIFIER,NAS-Identifier
		AcctColumnDef	NASPORT,NAS-Port,integer
		AcctColumnDef	DNIS,Called-Station-Id
#		AcctColumnDef	CALLINGSTATIONID,Calling-Station-Id

		# This updates the time and octets left
		# for this user
		AcctSQLStatement update RADUSERS set TIMELEFT=TIMELEFT-0%{Acct-Session-Time}, OCTETSINLEFT=OCTETSINLEFT-0%{Acct-Input-Octets}, OCTETSOUTLEFT=OCTETSOUTLEFT-0%{Acct-Output-Octets} where USERNAME='%n'

		# These are the classic things to add to each users 
		# reply to allow a PPP dialup session. It may be 
		# different for your NAS. This will add some 
		# reply items to everyone's reply
		AddToReply Framed-Protocol = PPP,\
        		Framed-IP-Netmask = 255.255.255.255,\
        		Framed-Routing = None,\
        		Framed-MTU = 1500,\
			Framed-Compression = Van-Jacobson-TCP-IP

		# If you intend to use rcrypt reversible encryption
		# for passwords in your Radmin database, you must 
		# RcryptKey here to be the same secret key you
		# defined in your Radmin Site.pm, and also set 
		# PasswordFormat in your Site.pm.
		# RcryptKey mysecret

		# If you intend to use Unix encryption in your database,
		# you will need to set EncryptedPasssword here,
		# as well as setting PasswordFormat in your Site.pm
		# EncryptedPassword

		# You can change the max bad login count from the default
		# of 5 with something like
		# MaxBadLogins 10

		# To improve user lookup performance on databases that support
		# placeholders, you can use AuthSelectParam and ? like this:
#		AuthSelect select PASS_WORD, STATICADDRESS, TIMELEFT,MAXLOGINS, SERVICENAME, BADLOGINS, VALIDFROM, VALIDTO from	RADUSERS where USERNAME=?
#		AuthSelectParam %0
#		ServiceAttrQuery select ATTR_ID, VENDOR_ID, IVALUE, SVALUE, ITEM_TYPE from RADSTCONFIG where NAME=? order by ITEM_TYPE
#		UserAttrQuery select ATTR_ID, VENDOR_ID, IVALUE, SVALUE, ITEM_TYPE from RADCONFIG where NAME=? order by ITEM_TYPE
#		AttrQueryParam %0

	</AuthBy>

	# This clause logs all authentication successes and failures to the RADAUTHLOG table
	# Suitable for use with RAdmin version 1.6 or later
	<AuthLog SQL>
		# This database spec usually should be exactly the same
		# as in <AuthBy RADMIN> above
		DBSource	dbi:mysql:radmin:localhost
		DBUsername	radmin
		DBAuth		radminpw

		LogSuccess
		SuccessQuery insert into RADAUTHLOG (TIME_STAMP, USERNAME, TYPE) values (%t, '%n', 1)
		LogFailure
		FailureQuery insert into RADAUTHLOG (TIME_STAMP, USERNAME, TYPE, REASON) values (%t, '%n', 0, %1)
	</AuthLog>



</Handler>

<SessionDatabase SQL>
	# This database spec usually should be exactly the same
	# as in <AuthBy RADMIN> above
	DBSource	dbi:mysql:radmin:localhost
	DBUsername	radmin
	DBAuth		radminpw

</SessionDatabase>

# You can also set up an address pool for Radiator to manage.
# The standard Radmin tables include a RADPOOL address pool table.
# see the example in addressallocator.cfg

