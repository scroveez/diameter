We use Safeword
token-based authentication for access to our corporate network.  Safeword
comes with its own radius server, but we can't use it directly. The Safeword
radius server expects the username, followed by a comma, followed by the
token string (6 characters, generated by a small keyring style token) all in
the username field.  The remembered password is used in the password field.
But this is no good for us - different users have different access
privileges,
and we enforce this by firewall rules.  Users authenticate directly to the
firewall, either via a web interface or by having an IPSec VPN that
terminates
on the firewall.  So the firewall needs to know who the user is, and it has
no way of stripping off the token string after the user name.  That's where
Radiator comes in.  We tell people to use username in the username field,
and to use token string, comma, remembered password in the password
field.  The firewall passes the request to Radiator, which uses PreAuthHook
and PostAuthHook to munge the username and password fields, passing
the munged values via <AuthBy RADIUS> to the Safeword radius server.
Note that other token-based authentication systems, such as SecurID, already
use a sensible format when tokens are used in combination with a
remembered password.

In an older version of Radiator, I actually had to fiddle the code, but now
I
can just use hooks.  Attached are the hook files.  Others may find this
useful if they also need to do munging of usernames and passwords.
 <<SafewordPostAuth.pl>>  <<SafewordPreAuth.pl>> 

        Regards,
        - Stephen Frede
          (Optus Information Security Manager)
