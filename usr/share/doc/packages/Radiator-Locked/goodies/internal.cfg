# internal.cfg
#
# Example Radiator configuration file.
# This very simple file will allow you to get started with 
# AuthBy INTERNAL.
#
# AuthBy INTERNAL allows you to define in a fixed way how to respond 
# to each kind of request handled by the AuthBy.
# For each type of request you can specify whether to accept, reject, 
# ignore or challenge the request. This can be useful for
# ignoring certain types of requests, or to adjust the behaviour
# of cascades of AuthBy clauses
#
# You should consider this file to be a starting point only
# $Id: internal.cfg,v 1.2 2002/11/29 06:09:51 mikem Exp $

Foreground
LogStdout
LogDir		.
DbDir		.
# User a lower trace level in production systems:
Trace 		4

# You will probably want to add other Clients to suit your site,
# one for each NAS you want to work with
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>

# All the *Result parameters take one of the following keywords
# to determine how to reply to that type of request. The keywords
# are case insensitive, and may be embedded within any string
#  accept
#  reject
#  ignore
#  challenge
#   anything else will IGNORE
# Caution: for accounting requests, reject is the same as ignore
#
# You can also run hooks to determine the result. See goodies/internalhook.cfg
<Realm DEFAULT>
	<AuthBy INTERNAL>
		# AuthResult says how to handle AccessRequest
#		AuthResult ACCEPT

		# AcctStartResult says how to handle accountin starts
#		AcctStartResult IGNORE

		# AcctStopResult says how to handle accounting stops
#		AcctStopResult ACCEPT

		# AcctAliveResult says how to handle accounting Alive
#		AcctAliveResult ACCEPT

		# AcctResult says how to handle AccountingRequest
		# for which there is not a more specific Acct*Result
#		AcctResult IGNORE

		# DefaultResult says how to handle requests for
		# which there is no explicit Result code
		# defaults to 'ignore'
#		DefaultResult REJECT
		
		# You can use all the standard AddToReply etc
		# to adjust accepts
#		AddToReply Reply-Message=test
	</AuthBy>
</Realm>

