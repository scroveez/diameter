# radminDigipass.cfg
#
# Example Radiator configuration file to interface to the
# Radmin user management package from Open System Consultants
# (http://www.open.com.au/radmin) and to authenticate
# using the optional Vasco Digipass authentication instead
# of normal password authentication.
# Authentication with Vasco Digipass requires the Authen-Digipass
# module from Open System Consultants
# Requires Radiator 3.9 plus patches or later.
#
# You can add extra items to your RADUSERS table and make 
# Radiator take note of them with, for example:
# AuthSelect select PASS_WORD,STATICADDRESS,TIMELEFT,\
#            MAXLOGINS, SERVICENAME, BADLOGINS, VALIDFROM, VALIDTO,\
#            FRAMED_NETMASK,FRAMED_FILTER_ID,MAXIDLETIME \
#            from RADUSERS where \
#            USERNAME='%n' and BADLOGINS < 5 and \
#            VALIDFROM < %t and VALIDTO > %t
# AuthColumnDef   0,Framed-IP-Netmask,reply
# AuthColumnDef   1,Filter-Id,reply
# AuthColumnDef   2,Idle-Timeout,reply
# note that the numbering of AuthColumnDef starts with the
# field following the first 4 minumum and required fields.
#
# You should consider this file to be a starting point only
# $Id: radminDigipass.cfg,v 1.3 2013/08/29 06:58:47 hvn Exp $

Foreground
LogStdout
LogDir		.
DbDir		.

# Don't turn this up too high, since all log messages are logged
# to the RADMESSAGES table in the database. 3 will give you everything
# except debugging messages
Trace 4

# You will probably want to change this to suit your site.
# You should list all the clients you have, and their secrets
# If you are using the Radmin Clients table, you will probably
# want to disable this.
<Client DEFAULT>
	Secret	mysecret
	DupInterval 0
</Client>

# You can put additonal (or all) client details in your Radmin
# database table
# and get their details from there with something like this:
# You can then use the Radmin 'Add Radius Client' to add new clients.
<ClientListSQL>
	DBSource	dbi:mysql:radmin:localhost
	DBUsername	radmin
	DBAuth		radminpw
</ClientListSQL>

# Handle everyone with RADMIN
<Realm DEFAULT>
       # Successful Authenticaiton requires that AuthBy DIGIPASS
       # succeeds and then the following AuthBy RADMIN succeeeds
       AuthByPolicy ContinueWhileAccept

       <AuthBy SQLDIGIPASS>
		# Adjust DBSource, DBUsername, DBAuth to suit your DB
		DBSource	dbi:mysql:radmin:localhost
		DBUsername	radmin
		DBAuth		radminpw
	
		# Select which EAP type(s) you are willing to support (optional)	
		EAPType One-Time-Password
#		EAPType Generic-Token

		# You can configure the SQL queries that will be used
		# to fetch Digipass token data and update the database (the
		# token data must be updated after each successful of
		# unsuccessful authentication attempt)
		AuthSelect select DP_DATA, DIGIPASS from RADDIGIPASS where USER_ID=%0
		UpdateQuery update RADDIGIPASS set DP_DATA='%0' where DIGIPASS='%1'

		# You can also control a number of Digipass parameters, including
		# ITimeWindow, IThreshold, SyncWindow,
		# CheckChallenge, ChkInactDays, DeriveVector, EventWindow, HSMSlotId,
		# StorageKeyId, TransportKeyId, StorageDeriveKey1, StorageDeriveKey2,
		# StorageDeriveKey3, StorageDeriveKey4. Requires Authen-Digipass 1.4 or later.
		# See goodies/digipass.cfg for documentation.
	</AuthBy>

	# IF AuthBy DIGIPASS above succeeds, we will continue on to get
	# other attributes from RAdmin
	<AuthBy RADMIN>
		# Change DBSource, DBUsername, DBAuth for your database
		# See the reference manual. You will also have to 
		# change the one in <SessionDatabase SQL> below
		# so its the same
		DBSource	dbi:mysql:radmin:localhost
		DBUsername	radmin
		DBAuth		radminpw

		# Never look up the DEFAULT user 
		NoDefault

		# The passwrod was checked in AuthBy DIGIPASS
		NoCheckPassword

		# You can add to or change these if you want, but you
		# will probably want to change the database schema first
		AccountingTable	RADUSAGE
		AcctColumnDef	USERNAME,User-Name
		AcctColumnDef	TIME_STAMP,Timestamp,integer
		AcctColumnDef	ACCTSTATUSTYPE,Acct-Status-Type,integer
		AcctColumnDef	ACCTDELAYTIME,Acct-Delay-Time,integer
		AcctColumnDef	ACCTINPUTOCTETS,Acct-Input-Octets,integer
		AcctColumnDef	ACCTOUTPUTOCTETS,Acct-Output-Octets,integer
		AcctColumnDef	ACCTSESSIONID,Acct-Session-Id
		AcctColumnDef	ACCTSESSIONTIME,Acct-Session-Time,integer
		AcctColumnDef	ACCTTERMINATECAUSE,Acct-Terminate-Cause,integer
		AcctColumnDef	FRAMEDIPADDRESS,Framed-IP-Address
		AcctColumnDef	NASIDENTIFIER,NAS-IP-Address
		AcctColumnDef	NASIDENTIFIER,NAS-Identifier
		AcctColumnDef	NASPORT,NAS-Port,integer
		AcctColumnDef	DNIS,Called-Station-Id
#		AcctColumnDef	CALLINGSTATIONID,Calling-Station-Id

		# This updates the time and octets left
		# for this user
		AcctSQLStatement update RADUSERS set TIMELEFT=TIMELEFT-0%{Acct-Session-Time}, OCTETSINLEFT=OCTETSINLEFT-0%{Acct-Input-Octets}, OCTETSOUTLEFT=OCTETSOUTLEFT-0%{Acct-Output-Octets} where USERNAME='%n'

		# These are the classic things to add to each users 
		# reply to allow a PPP dialup session. It may be 
		# different for your NAS. This will add some 
		# reply items to everyone's reply
		AddToReply Framed-Protocol = PPP,\
        		Framed-IP-Netmask = 255.255.255.255,\
        		Framed-Routing = None,\
        		Framed-MTU = 1500,\
			Framed-Compression = Van-Jacobson-TCP-IP

		# If you intend to use rcrypt reversible encryption
		# for passwords in your Radmin database, you must 
		# RcryptKey here to be the same secret key you
		# defined in your Radmin Site.pm, and also set 
		# PasswordFormat in your Site.pm.
		# RcryptKey mysecret

		# If you intend to use Unix encryption in your database,
		# you will need to set EncryptedPasssword here,
		# as well as setting PasswordFormat in your Site.pm
		# EncryptedPassword

		# You can change the max bad login count from the default
		# of 5 with something like
		# MaxBadLogins 10
	</AuthBy>

	# This clause logs all authentication successes and failures to the RADAUTHLOG table
	# Suitable for use with RAdmin version 1.6 or later
	<AuthLog SQL>
		# This database spec usually should be exactly the same
		# as in <AuthBy RADMIN> above
		DBSource	dbi:mysql:radmin:localhost
		DBUsername	radmin
		DBAuth		radminpw

		LogSuccess
		SuccessQuery insert into RADAUTHLOG (TIME_STAMP, USERNAME, TYPE) values (%t, '%n', 1)
		LogFailure
		FailureQuery insert into RADAUTHLOG (TIME_STAMP, USERNAME, TYPE, REASON) values (%t, '%n', 0, %1)
	</AuthLog>



</Realm>

<SessionDatabase SQL>
	# This database spec usually should be exactly the same
	# as in <AuthBy RADMIN> above
	DBSource	dbi:mysql:radmin:localhost
	DBUsername	radmin
	DBAuth		radminpw

</SessionDatabase>

# You can also set up an address pool for Radiator to manage.
# The standard Radmin tables include a RADPOOL address pool table.
# see the example in addressallocator.cfg

